do local Rayfield=loadstring(game:HttpGet("https://sirius.menu/rayfield"))();local Window=Rayfield:CreateWindow({Name="Cosmic Decompiler",Icon=98825337097438,LoadingTitle="Cosmic Decompiler",LoadingSubtitle="by Irox",Theme="Default",DisableRayfieldPrompts=false,DisableBuildWarnings=false,ConfigurationSaving={Enabled=false,FolderName=nil,FileName="Decompiler Settings"},Discord={Enabled=false,Invite="discord.gg/",RememberJoins=false},KeySystem=true,KeySettings={Title="Cosmic Decompiler Key System",Subtitle="Key System",Note="You can get the key in the discord server discord.gg/",FileName="CosmicDecompilerKey",SaveKey=true,GrabKeyFromSite=true,Key={"CosmicDecompiler12042"}}});local Settingstab=Window:CreateTab("Settings");local Decompilertab=Window:CreateTab("Decompiler");local othertab=Window:CreateTab("Other");local OtherScriptTab=Window:CreateTab("OtherScript");local Label=othertab:CreateLabel("Discord.gg/",0,Color3.fromRGB(0,0,0),false);local Label2=Settingstab:CreateLabel("More Function Soon",0,Color3.fromRGB(0,0,0),false);local function getSafePlaceName() local placeName="";pcall(function() local info=game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId);placeName=info.Name:gsub("[^%w%s]",""):gsub("%s+","_");end);if (placeName=="") then placeName=tostring(game.PlaceId);end return placeName;end local function safeLoadScript(url,scriptName) local success,result=pcall(function() return loadstring(game:HttpGet(url))();end);if  not success then warn(scriptName   .. " failed to load: "   .. tostring(result) );end end local DecompileLogLabel=Decompilertab:CreateLabel("Decompile Log: No recent actions",0,Color3.fromRGB(0,0,0),false);local function updateDecompileLog(message,color) DecompileLogLabel:Set("Decompile Log: "   .. message );DecompileLogLabel.TextColor3=color or Color3.fromRGB(0,0,0) ;end local Option={SafeMode=false,timeout=15,SaveByte=false,DecompileWithGui=false,DecompileJustGui=false,NoScripts=false,ShutdownWhenDone=false,AntiIdle=false,ReadMe=false,RemovePlayerCharacters=true,ShowStatus=true,FilePath="CosmicDecompile_"   .. getSafePlaceName() ,SaveMapOnly=false};local Button=othertab:CreateButton({Name="Exit",Callback=function() Rayfield:Destroy();end});local Button=Decompilertab:CreateButton({Name="Decompile",Callback=function() local Params={RepoURL="https://raw.githubusercontent.com/luau/SynSaveInstance/main/",SSI="saveinstance"};local success,synsaveinstance=pcall(function() return loadstring(game:HttpGet(Params.RepoURL   .. Params.SSI   .. ".luau" ,true),Params.SSI)();end);if ( not success or  not synsaveinstance) then print("Error loading script: "   .. tostring(synsaveinstance) );return;end if (Option.SaveMapOnly==true) then updateDecompileLog("Saving Map Only",Color3.fromRGB(0,255,0));local saveMapSuccess,saveMapResult=pcall(function() local mapFolder=Instance.new("Folder");mapFolder.Name="MapDecompile";for _,item in pairs(game.Workspace:GetChildren()) do if (item and (typeof(item)=="Instance") and  not item:IsA("Terrain") and (item.Parent~=nil)) then local success,clonedItem=pcall(function() return item:Clone();end);if (success and clonedItem) then clonedItem.Parent=mapFolder;else warn("Could not clone item: "   .. tostring(item) );end end end local mapOnlyOption={SaveMapOnly=true,FilePath=Option.FilePath   .. "_MapOnly" ,NoScripts=true,RemovePlayerCharacters=true};if ( #mapFolder:GetChildren()>0) then synsaveinstance(mapFolder);else warn("No items to decompile in the map");end end);if  not saveMapSuccess then warn("Error in Map decompilation: "   .. tostring(saveMapResult) );end return;end if (Option.DecompileWithGui==true) then updateDecompileLog("Saving With Gui",Color3.fromRGB(0,255,0));local guiSuccess,guiResult=pcall(function() local folder=Instance.new("Folder");folder.Name="PlayerGuiDecompile";if (game.Players.LocalPlayer and game.Players.LocalPlayer.PlayerGui) then for _,gui in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do local clonedGui=gui:Clone();clonedGui.Parent=folder;end synsaveinstance(folder);wait(5);synsaveinstance(Option);else warn("LocalPlayer or PlayerGui not found");end end);if  not guiSuccess then warn("Error in DecompileWithGui: "   .. tostring(guiResult) );end end if (Option.DecompileJustGui==true) then updateDecompileLog("Saving Gui Only",Color3.fromRGB(0,255,0));local guiSuccess,guiResult=pcall(function() local folder=Instance.new("Folder");folder.Name="PlayerGuiDecompile";folder.Parent=game.Players.LocalPlayer.PlayerGui;if (game.Players.LocalPlayer and game.Players.LocalPlayer.PlayerGui) then for _,gui in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do local clonedGui=gui:Clone();clonedGui.Parent=folder;end synsaveinstance(folder);else warn("LocalPlayer or PlayerGui not found");end end);if  not guiSuccess then warn("Error in GUI decompilation: "   .. tostring(guiResult) );end end if ( not Option.DecompileWithGui and  not Option.SaveMapOnly and  not Option.DecompileJustGui) then updateDecompileLog("Saving the game",Color3.fromRGB(0,255,0));synsaveinstance(Option);end end});local SafeModeToggle=Settingstab:CreateToggle({Name="SafeMode",CurrentValue=false,Flag="Toggle1",Callback=function(Value) Option.SafeMode=Value;print("SafeMode: "   .. tostring(Value) );end});local DecompileGuiToggle=Settingstab:CreateToggle({Name="Decompile with Gui",CurrentValue=false,Flag="Toggle2",Callback=function(Value) Option.DecompileWithGui=Value;print("Decompile with Gui: "   .. tostring(Value) );end});local DecompileJustGuiToggle=Settingstab:CreateToggle({Name="Decompile Just the Gui",CurrentValue=false,Flag="Toggle10",Callback=function(Value) Option.DecompileJustGui=Value;print("Decompile Just Gui: "   .. tostring(Value) );end});local SaveBytecodeToggle=Settingstab:CreateToggle({Name="SaveBytecode",CurrentValue=false,Flag="Toggle3",Callback=function(Value) Option.SaveBytecode=Value;print("SaveBytecode: "   .. tostring(Value) );end});local NoScriptsToggle=Settingstab:CreateToggle({Name="noscripts",CurrentValue=false,Flag="Toggle4",Callback=function(Value) Option.NoScripts=Value;print("noscripts: "   .. tostring(Value) );end});local ShutdownToggle=Settingstab:CreateToggle({Name="ShutdownWhenDone",CurrentValue=false,Flag="Toggle5",Callback=function(Value) Option.ShutdownWhenDone=Value;print("ShutdownWhenDone: "   .. tostring(Value) );end});local AntiIdleToggle=Settingstab:CreateToggle({Name="AntiIdle",CurrentValue=false,Flag="Toggle6",Callback=function(Value) Option.AntiIdle=Value;print("AntiIdle: "   .. tostring(Value) );end});local ReadMeToggle=Settingstab:CreateToggle({Name="ReadMe",CurrentValue=true,Flag="Toggle7",Callback=function(Value) Option.ReadMe=Value;print("ReadMe: "   .. tostring(Value) );end});local RemovePlayerCharactersToggle=Settingstab:CreateToggle({Name="RemovePlayerCharacters",CurrentValue=true,Flag="Toggle8",Callback=function(Value) Option.RemovePlayerCharacters=Value;print("RemovePlayerCharacters: "   .. tostring(Value) );end});local ShowStatusToggle=Settingstab:CreateToggle({Name="ShowStatus",CurrentValue=true,Flag="Toggle9",Callback=function(Value) Option.ShowStatus=Value;print("ShowStatus: "   .. tostring(Value) );end});local SaveMapOnlyToggle=Settingstab:CreateToggle({Name="SaveMapOnly",CurrentValue=false,Flag="Toggle11",Callback=function(Value) Option.SaveMapOnly=Value;print("SaveMapOnly: "   .. tostring(Value) );if Value then Option.DecompileWithGui=false;Option.DecompileJustGui=false;DecompileGuiToggle:Set(false);DecompileJustGuiToggle:Set(false);end end});local InfiniteYield=OtherScriptTab:CreateButton({Name="InfiniteYield",Callback=function() safeLoadScript("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source","InfiniteYield");end});local Dex=OtherScriptTab:CreateButton({Name="Dex",Callback=function() safeLoadScript("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua","Dex");end});local RemoteSpy=OtherScriptTab:CreateButton({Name="RemoteSpy",Callback=function() safeLoadScript("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua","RemoteSpy");end});local AudioLogger=OtherScriptTab:CreateButton({Name="AudioLogger",Callback=function() safeLoadScript("https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua","AudioLogger");end}); end
